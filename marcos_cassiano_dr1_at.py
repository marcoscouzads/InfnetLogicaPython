# -*- coding: utf-8 -*-
"""Marcos_Cassiano_DR1_AT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uH4jU20wdy7YwWd_Szm4s9nrFGWUWzEN
todos os trabalhos feitos aqui 
questão 3
"""

def diagnosticar_limite(renda, lar, edu, mov):    
  max_lar = renda * (30 / 100)
  max_edu = renda * (20 / 100)
  max_mov = renda * (15 / 100)
    
  porcentagem_lar = lar * 100 / renda
  porcentagem_edu = edu * 100 / renda
  porcentagem_mov = mov * 100 / renda   
   
  diagnostico = ""
  comparar_lar = ""
  comparar_edu = ""
  comparar_mov = ""
    
    
  if lar <= max_lar:
      comparar_lar = "seus gastos estão dentro da margem recomendada"
    
  else:
      comparar_lar = f"Portanto, idealmente, o máximo de sua comprometida com moradia devereia ser de R$ {max_lar:.2f}"
    ###############################    
    
  if edu <= max_edu:
      comparar_edu = "seus gastos estão dentro da margem recomendada"
    
  else:
      comparar_edu = f"Portanto, idealmente, o máximo de sua comprometida com moradia devereia ser de R$ {max_edu:.2f}"
    ################################
    
  if mov <= max_mov:
      comparar_mov = "seus gastos estão dentro da margem recomendada"
    
  else:
      comparar_mov = f"Portanto, idealmente, o máximo de sua comprometida com moradia devereia ser de R$ {max_mov:.2f}"
    
    
  diagnostico += f"Seus gastos totais com moradia comprometem {porcentagem_lar:.2f}% de sua renda total. O máximo recomendado é de 30%. {comparar_lar}.\n"
  diagnostico += f"Seus gastos totais com educação comprometem {porcentagem_edu:.2f}% de sua renda total. O máximo recomendado é de 20%. {comparar_edu}.\n"
  diagnostico += f"Seus gastos totais com transporte comprometem {porcentagem_mov:.2f}% de sua renda total. O máximo recomendado é de 15%. {comparar_mov}."
    
  print(diagnostico)

renda = float(input("Digite sua renda mensal: R$ ")) 
lar = float(input("Digite seus gastos com moradia: R$ "))     # max 30%
edu = float(input("Digite seus gastos com educação: R$ "))    # max 20%
mov = float(input("Digite seus gastos com transporte: R$ "))  # max 15%
diagnosticar_limite(renda, lar, edu, mov)

"""questão 4"""

import matplotlib.pyplot as plt

def juros_compostos(valor_inicial, taxa, aporte, periodo):
    juros = []
    
    for i in range (periodo):
        valor_inicial = (valor_inicial + (valor_inicial * (taxa / 100))) + aporte
        print(f"\t Após{i+1}º período(s), o montante será de R$ {valor_inicial:.2f}")
        juros.append(valor_inicial)
        
    plt.plot(juros)
    plt.title("Rendimento estipulado")
    plt.xlabel("mêses")
    plt.ylabel("valores acumulados")
    plt.show()
    
valor_inicial = float(input("Digite valor inicial: R$ "))
taxa = float(input("Rendimento por período (%): "))
aporte  = float(input("Aporte a cada período: R$ "))
periodo = int(input("Total de períodos:  "))
juros_compostos(valor_inicial, taxa, aporte, periodo)

"""questão 5"""

import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv('pibs.csv') # usar o indice de paises
df.set_index('País', inplace=True)

pais = input("Informe um país ")
if pais in df.index:
  ano = input("Informe um ano entre 2013 e 2020: ")
  if ano in df.columns:
    print(f"PIB {pais} em {ano}: US${df.loc[pais, ano]} trilhões.")
  else:
    print("Ano não disponível")
else:
  print("País não disponível")

if pais in df.index:
  variacao = (df.loc[pais, '2020'] / df.loc[pais, '2013'] -1) * 100
  print(f"Variação de {variacao:.2f}% entre 2013 e 2020.")
else:
  print("País não disponível")
if pais in df.index:
  pib = df.loc[pais, : ]
  plt.plot(pib)
  plt.title(f" PIB do {pais}. ")
  plt.xlabel("Anos ")
  plt.ylabel("Valores em trilhões US$ ")
  plt.show()
else:
  print("País não disponível")

"""o mesmo programa contido em funções"""

def pib_pais():
  if pais in df.index:
    if ano in df.columns:
      print(f"PIB {pais} em {ano}: US${df.loc[pais, ano]} trilhões.")
    else:
      print("Ano não disponível")
  else:
    print("País não disponível")

pais = input("Informe um país ")
ano = input("Informe um ano entre 2013 e 2020: ")
pib_pais()

def variacao_pib():
  if pais in df.index:
    variacao = (df.loc[pais, '2020'] / df.loc[pais, '2013'] -1) * 100
    print(f"Variação de {variacao:.2f}% entre 2013 e 2020.")
  else:
    print("País não disponível")
pais = input("Informe um país ")
variacao_pib()

def grafico_pib():
  if pais in df.index:
    pib = df.loc[pais, : ]
    plt.plot(pib)
    plt.title(f" PIB do {pais}. ")
    plt.xlabel("Anos ")
    plt.ylabel("Valores em trilhões US$ ")
    plt.show()
  else:
    print("País não disponível")
pais = input("Informe um país ")
grafico_pib()